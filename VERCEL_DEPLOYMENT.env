# Vercel Environment Variables Configuration
# Copy these to your Vercel project settings

# Database Configuration (PostgreSQL - use Railway, Supabase, or Neon)
DATABASE_URL=postgresql://username:password@host:port/database_name

# JWT Secret (generate a strong secret)
JWT_SECRET=your-very-strong-secret-key-here-make-it-long-and-random

# Email Configuration (optional - for booking confirmations)
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-gmail-app-password

# Frontend URL (your Vercel app URL)
FRONTEND_URL=https://your-app-name.vercel.app

# Node Environment
NODE_ENV=production

# Optional: Custom port (Vercel handles this automatically)
PORT=3000

---

## Quick Deployment Steps:

### 1. Deploy Backend to Railway:
```bash
# Install Railway CLI
npm install -g @railway/cli

# Login and deploy
railway login
railway init
railway add postgresql
railway deploy
```

### 2. Deploy Frontend to Vercel:
```bash
# Install Vercel CLI  
npm install -g vercel

# Deploy from frontend directory
cd frontend
vercel --prod
```

### 3. Set Environment Variables in Vercel:
- Go to your Vercel project dashboard
- Navigate to Settings > Environment Variables
- Add each variable from above
- Redeploy the application

### 4. Update API URLs:
Update `frontend/app/lib/api.ts`:
```typescript
const api = axios.create({
  baseURL: 'https://your-railway-app.up.railway.app',
  // ... rest of config
});
```

### 5. Seed Production Database:
```bash
# After deployment, run seeding
npm run seed:demo
```